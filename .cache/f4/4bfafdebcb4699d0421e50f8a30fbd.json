{"id":"../node_modules/stream-http/lib/capability.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1610925343440},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\stream-http\\package.json","includedInParent":true,"mtime":1610739188107}],"generated":{"js":"var global = arguments[3];\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/stream-http/lib/capability.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}}],"sources":{"../node_modules/stream-http/lib/capability.js":"exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n"},"lineCount":61}},"error":null,"hash":"e009aeab6c7cd0595b42b27fcb1d5f91","cacheData":{"env":{}}}