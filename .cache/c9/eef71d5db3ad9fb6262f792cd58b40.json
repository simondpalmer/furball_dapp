{"id":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612810221615},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\peer-info\\node_modules\\libp2p-crypto\\package.json","includedInParent":true,"mtime":1612592559090},{"name":"./ecdh","loc":{"line":3,"column":21},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\peer-info\\node_modules\\libp2p-crypto\\src\\keys\\ephemeral-keys.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\peer-info\\node_modules\\libp2p-crypto\\src\\keys\\ecdh-browser.js"}],"generated":{"js":"'use strict';\n\nconst ecdh = require('./ecdh'); // Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\n\n\nmodule.exports = (curve, callback) => {\n  ecdh.generateEphmeralKeyPair(curve, callback);\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":0}},{"name":"ecdh","generated":{"line":3,"column":6},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":10},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":10}},{"name":"require","generated":{"line":3,"column":13},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":13}},{"generated":{"line":3,"column":20},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":21},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":21}},{"generated":{"line":3,"column":29},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":30},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":32},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":5,"column":0}},{"generated":{"line":4,"column":0},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":6,"column":0}},{"generated":{"line":5,"column":0},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":7,"column":0}},{"generated":{"line":6,"column":0},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":8,"column":0}},{"name":"module","generated":{"line":9,"column":0},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":6},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":6}},{"name":"exports","generated":{"line":9,"column":7},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":7}},{"generated":{"line":9,"column":14},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":17},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":17}},{"name":"curve","generated":{"line":9,"column":18},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":18}},{"generated":{"line":9,"column":23},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":17}},{"name":"callback","generated":{"line":9,"column":25},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":25}},{"generated":{"line":9,"column":33},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":17}},{"generated":{"line":9,"column":38},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":38}},{"name":"ecdh","generated":{"line":10,"column":0},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":2}},{"name":"ecdh","generated":{"line":10,"column":2},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":2}},{"generated":{"line":10,"column":6},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":6}},{"name":"generateEphmeralKeyPair","generated":{"line":10,"column":7},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":7}},{"generated":{"line":10,"column":30},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":2}},{"name":"curve","generated":{"line":10,"column":31},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":31}},{"generated":{"line":10,"column":36},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":2}},{"name":"callback","generated":{"line":10,"column":38},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":38}},{"generated":{"line":10,"column":46},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":2}},{"generated":{"line":11,"column":0},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":11,"column":1}},{"generated":{"line":11,"column":1},"source":"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":0}}],"sources":{"../node_modules/peer-info/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js":"'use strict'\n\nconst ecdh = require('./ecdh')\n\n// Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\nmodule.exports = (curve, callback) => {\n  ecdh.generateEphmeralKeyPair(curve, callback)\n}\n"},"lineCount":null}},"error":null,"hash":"ea02694a6b405c693bd53d82714112b6","cacheData":{"env":{}}}