{"id":"../node_modules/@ceramicnetwork/http-client/lib/ceramic-http-client.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612734035267},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\package.json","includedInParent":true,"mtime":1612644319599},{"name":"./utils","loc":{"line":7,"column":24},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\utils.js"},{"name":"./document","loc":{"line":8,"column":43},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\document.js"},{"name":"dids","loc":{"line":9,"column":23},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dids\\lib\\index.js"},{"name":"@ceramicnetwork/common","loc":{"line":10,"column":25},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\index.js"},{"name":"@ceramicnetwork/doctype-tile","loc":{"line":11,"column":31},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\doctype-tile\\lib\\index.js"},{"name":"@ceramicnetwork/doctype-caip10-link","loc":{"line":12,"column":38},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\doctype-caip10-link\\lib\\index.js"},{"name":"@ceramicnetwork/3id-did-resolver","loc":{"line":13,"column":52},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\3id-did-resolver\\lib\\index.js"},{"name":"key-did-resolver","loc":{"line":14,"column":51},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\key-did-resolver\\lib\\index.js"},{"name":"did-resolver","loc":{"line":15,"column":31},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\http-client\\lib\\ceramic-http-client.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\did-resolver\\lib\\resolver.esm.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_CLIENT_CONFIG = void 0;\nconst utils_1 = require(\"./utils\");\nconst document_1 = __importDefault(require(\"./document\"));\nconst dids_1 = require(\"dids\");\nconst common_1 = require(\"@ceramicnetwork/common\");\nconst doctype_tile_1 = require(\"@ceramicnetwork/doctype-tile\");\nconst doctype_caip10_link_1 = require(\"@ceramicnetwork/doctype-caip10-link\");\nconst _3id_did_resolver_1 = __importDefault(require(\"@ceramicnetwork/3id-did-resolver\"));\nconst key_did_resolver_1 = __importDefault(require(\"key-did-resolver\"));\nconst did_resolver_1 = require(\"did-resolver\");\nconst API_PATH = '/api/v0';\nconst CERAMIC_HOST = 'http://localhost:7007';\nexports.DEFAULT_CLIENT_CONFIG = {\n    docSyncEnabled: false,\n    docSyncInterval: 5000,\n    docCacheLimit: 500,\n    cacheDocCommits: false,\n};\nclass CeramicClient {\n    constructor(apiHost = CERAMIC_HOST, config = {}) {\n        this._config = { ...exports.DEFAULT_CLIENT_CONFIG, ...config };\n        this._apiUrl = utils_1.combineURLs(apiHost, API_PATH);\n        this._docCache = new common_1.DocCache(config.docCacheLimit, this._config.cacheDocCommits);\n        this.context = { api: this };\n        this.pin = this._initPinApi();\n        const keyDidResolver = key_did_resolver_1.default.getResolver();\n        const threeIdResolver = _3id_did_resolver_1.default.getResolver(this);\n        this.context.resolver = new did_resolver_1.Resolver({\n            ...this._config.didResolver, ...threeIdResolver, ...keyDidResolver,\n        });\n        this._doctypeConstructors = {\n            'tile': doctype_tile_1.TileDoctype,\n            'caip10-link': doctype_caip10_link_1.Caip10LinkDoctype\n        };\n    }\n    get did() {\n        return this.context.did;\n    }\n    _initPinApi() {\n        return {\n            add: async (docId) => {\n                await utils_1.fetchJson(this._apiUrl + '/pins' + `/${docId.toString()}`, { method: 'post' });\n            },\n            rm: async (docId) => {\n                await utils_1.fetchJson(this._apiUrl + '/pins' + `/${docId.toString()}`, { method: 'delete' });\n            },\n            ls: async (docId) => {\n                let url = this._apiUrl + '/pins';\n                if (docId) {\n                    url += `/${docId.toString()}`;\n                }\n                const result = await utils_1.fetchJson(url);\n                const { pinnedDocIds } = result;\n                return {\n                    [Symbol.asyncIterator]() {\n                        let index = 0;\n                        return {\n                            next() {\n                                if (index === pinnedDocIds.length) {\n                                    return Promise.resolve({ value: null, done: true });\n                                }\n                                return Promise.resolve({ value: pinnedDocIds[index++], done: false });\n                            }\n                        };\n                    }\n                };\n            }\n        };\n    }\n    async createDocument(doctype, params, opts) {\n        const doctypeConstructor = this.findDoctypeConstructor(doctype);\n        const genesis = await doctypeConstructor.makeGenesis(params, this.context, opts);\n        return await this.createDocumentFromGenesis(doctype, genesis, opts);\n    }\n    async createDocumentFromGenesis(doctype, genesis, opts) {\n        const doc = await document_1.default.createFromGenesis(this._apiUrl, doctype, genesis, this.context, opts, this._config);\n        let docFromCache = this._docCache.get(doc.id);\n        if (docFromCache == null) {\n            this._docCache.put(doc);\n            docFromCache = doc;\n        }\n        else if (!common_1.DoctypeUtils.statesEqual(doc.state, docFromCache.state)) {\n            docFromCache.state = doc.state;\n            docFromCache.emit('change');\n        }\n        doc.doctypeLogic = this.findDoctypeConstructor(doc.state.doctype);\n        return docFromCache;\n    }\n    async loadDocument(docId) {\n        docId = utils_1.typeDocID(docId);\n        let doc = this._docCache.get(docId);\n        if (doc == null) {\n            doc = await document_1.default.load(docId, this._apiUrl, this.context, this._config);\n            this._docCache.put(doc);\n        }\n        else {\n            await doc._syncState();\n        }\n        doc.doctypeLogic = this.findDoctypeConstructor(doc.state.doctype);\n        return doc;\n    }\n    async multiQuery(queries) {\n        const queriesJSON = queries.map(q => {\n            return {\n                docId: typeof q.docId === 'string' ? q.docId : q.docId.toString(),\n                paths: q.paths\n            };\n        });\n        const results = await utils_1.fetchJson(this._apiUrl + '/multiqueries', {\n            method: 'post',\n            body: {\n                queries: queriesJSON\n            }\n        });\n        return Object.entries(results).reduce((acc, e) => {\n            const [k, v] = e;\n            const state = common_1.DoctypeUtils.deserializeState(v);\n            acc[k] = new document_1.default(state, this.context, this._apiUrl, this._config);\n            return acc;\n        }, {});\n    }\n    loadDocumentCommits(docId) {\n        const effectiveDocId = utils_1.typeDocID(docId);\n        return document_1.default.loadDocumentCommits(effectiveDocId, this._apiUrl);\n    }\n    async loadDocumentRecords(docId) {\n        return this.loadDocumentCommits(docId);\n    }\n    applyCommit(docId, commit, opts) {\n        const effectiveDocId = utils_1.typeDocID(docId);\n        return document_1.default.applyCommit(this._apiUrl, effectiveDocId, commit, this.context, opts);\n    }\n    async applyRecord(docId, record, opts) {\n        return this.applyCommit(docId, record, opts);\n    }\n    addDoctypeHandler(doctypeHandler) {\n        this._doctypeConstructors[doctypeHandler.name] = doctypeHandler.doctype;\n    }\n    findDoctypeConstructor(doctype) {\n        const constructor = this._doctypeConstructors[doctype];\n        if (constructor) {\n            return constructor;\n        }\n        else {\n            throw new Error(`Failed to find doctype constructor for doctype ${doctype}`);\n        }\n    }\n    async setDIDProvider(provider) {\n        this.context.provider = provider;\n        this.context.did = new dids_1.DID({ provider, resolver: this.context.resolver });\n        if (!this.context.did.authenticated) {\n            await this.context.did.authenticate();\n        }\n    }\n    async getSupportedChains() {\n        if (this._supportedChains) {\n            return this._supportedChains;\n        }\n        const { supportedChains } = await utils_1.fetchJson(this._apiUrl + '/node/chains');\n        this._supportedChains = supportedChains;\n        return supportedChains;\n    }\n    async close() {\n        this._docCache.applyToAll((d) => d.close());\n        this._docCache.clear();\n    }\n}\nexports.default = CeramicClient;\n"},"sourceMaps":{"js":{"version":3,"file":"ceramic-http-client.js","sourceRoot":"","sources":["../src/ceramic-http-client.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"0415f17330ba8bcc49aac54e41724516","cacheData":{"env":{}}}