{"id":"../node_modules/dataloader/index.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612734035267},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dataloader\\package.json","includedInParent":true,"mtime":1612645248439},{"name":"process","parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dataloader\\index.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\n\n/**\n * Copyright (c) 2019-present, GraphQL Foundation\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// A Function, which when given an Array of keys, returns a Promise of an Array\n// of values or Errors.\n// Optionally turn off batching or caching or provide a cache key function or a\n// custom cache instance.\n// If a custom cache is provided, it must be of this type (a subset of ES6 Map).\n\n/**\n * A `DataLoader` creates a public API for loading data from a particular\n * data back-end with unique keys such as the `id` column of a SQL table or\n * document name in a MongoDB database, given a batch loading function.\n *\n * Each `DataLoader` instance contains a unique memoized cache. Use caution when\n * used in long-lived applications or those which serve many users with\n * different access permissions and consider creating a new instance per\n * web request.\n */\nvar DataLoader =\n/*#__PURE__*/\nfunction () {\n  function DataLoader(batchLoadFn, options) {\n    if (typeof batchLoadFn !== 'function') {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + (\"Array<key> and returns Promise<Array<value>>, but got: \" + batchLoadFn + \".\"));\n    }\n\n    this._batchLoadFn = batchLoadFn;\n    this._maxBatchSize = getValidMaxBatchSize(options);\n    this._batchScheduleFn = getValidBatchScheduleFn(options);\n    this._cacheKeyFn = getValidCacheKeyFn(options);\n    this._cacheMap = getValidCacheMap(options);\n    this._batch = null;\n  } // Private\n\n\n  var _proto = DataLoader.prototype;\n\n  /**\n   * Loads a key, returning a `Promise` for the value represented by that key.\n   */\n  _proto.load = function load(key) {\n    if (key === null || key === undefined) {\n      throw new TypeError('The loader.load() function must be called with a value,' + (\"but got: \" + String(key) + \".\"));\n    }\n\n    var batch = getCurrentBatch(this);\n    var cacheMap = this._cacheMap;\n\n    var cacheKey = this._cacheKeyFn(key); // If caching and there is a cache-hit, return cached Promise.\n\n\n    if (cacheMap) {\n      var cachedPromise = cacheMap.get(cacheKey);\n\n      if (cachedPromise) {\n        var cacheHits = batch.cacheHits || (batch.cacheHits = []);\n        return new Promise(function (resolve) {\n          cacheHits.push(function () {\n            return resolve(cachedPromise);\n          });\n        });\n      }\n    } // Otherwise, produce a new Promise for this key, and enqueue it to be\n    // dispatched along with the current batch.\n\n\n    batch.keys.push(key);\n    var promise = new Promise(function (resolve, reject) {\n      batch.callbacks.push({\n        resolve: resolve,\n        reject: reject\n      });\n    }); // If caching, cache this promise.\n\n    if (cacheMap) {\n      cacheMap.set(cacheKey, promise);\n    }\n\n    return promise;\n  }\n  /**\n   * Loads multiple keys, promising an array of values:\n   *\n   *     var [ a, b ] = await myLoader.loadMany([ 'a', 'b' ]);\n   *\n   * This is similar to the more verbose:\n   *\n   *     var [ a, b ] = await Promise.all([\n   *       myLoader.load('a'),\n   *       myLoader.load('b')\n   *     ]);\n   *\n   * However it is different in the case where any load fails. Where\n   * Promise.all() would reject, loadMany() always resolves, however each result\n   * is either a value or an Error instance.\n   *\n   *     var [ a, b, c ] = await myLoader.loadMany([ 'a', 'b', 'badkey' ]);\n   *     // c instanceof Error\n   *\n   */\n  ;\n\n  _proto.loadMany = function loadMany(keys) {\n    if (!isArrayLike(keys)) {\n      throw new TypeError('The loader.loadMany() function must be called with Array<key> ' + (\"but got: \" + keys + \".\"));\n    } // Support ArrayLike by using only minimal property access\n\n\n    var loadPromises = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      loadPromises.push(this.load(keys[i])[\"catch\"](function (error) {\n        return error;\n      }));\n    }\n\n    return Promise.all(loadPromises);\n  }\n  /**\n   * Clears the value at `key` from the cache, if it exists. Returns itself for\n   * method chaining.\n   */\n  ;\n\n  _proto.clear = function clear(key) {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      var cacheKey = this._cacheKeyFn(key);\n\n      cacheMap[\"delete\"](cacheKey);\n    }\n\n    return this;\n  }\n  /**\n   * Clears the entire cache. To be used when some event results in unknown\n   * invalidations across this particular `DataLoader`. Returns itself for\n   * method chaining.\n   */\n  ;\n\n  _proto.clearAll = function clearAll() {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      cacheMap.clear();\n    }\n\n    return this;\n  }\n  /**\n   * Adds the provided key and value to the cache. If the key already\n   * exists, no change is made. Returns itself for method chaining.\n   *\n   * To prime the cache with an error at a key, provide an Error instance.\n   */\n  ;\n\n  _proto.prime = function prime(key, value) {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      var cacheKey = this._cacheKeyFn(key); // Only add the key if it does not already exist.\n\n\n      if (cacheMap.get(cacheKey) === undefined) {\n        // Cache a rejected promise if the value is an Error, in order to match\n        // the behavior of load(key).\n        var promise;\n\n        if (value instanceof Error) {\n          promise = Promise.reject(value); // Since this is a case where an Error is intentionally being primed\n          // for a given key, we want to disable unhandled promise rejection.\n\n          promise[\"catch\"](function () {});\n        } else {\n          promise = Promise.resolve(value);\n        }\n\n        cacheMap.set(cacheKey, promise);\n      }\n    }\n\n    return this;\n  };\n\n  return DataLoader;\n}(); // Private: Enqueue a Job to be executed after all \"PromiseJobs\" Jobs.\n//\n// ES6 JavaScript uses the concepts Job and JobQueue to schedule work to occur\n// after the current execution context has completed:\n// http://www.ecma-international.org/ecma-262/6.0/#sec-jobs-and-job-queues\n//\n// Node.js uses the `process.nextTick` mechanism to implement the concept of a\n// Job, maintaining a global FIFO JobQueue for all Jobs, which is flushed after\n// the current call stack ends.\n//\n// When calling `then` on a Promise, it enqueues a Job on a specific\n// \"PromiseJobs\" JobQueue which is flushed in Node as a single Job on the\n// global JobQueue.\n//\n// DataLoader batches all loads which occur in a single frame of execution, but\n// should include in the batch all loads which occur during the flushing of the\n// \"PromiseJobs\" JobQueue after that same execution frame.\n//\n// In order to avoid the DataLoader dispatch Job occuring before \"PromiseJobs\",\n// A Promise Job is created with the sole purpose of enqueuing a global Job,\n// ensuring that it always occurs after \"PromiseJobs\" ends.\n//\n// Node.js's job queue is unique. Browsers do not have an equivalent mechanism\n// for enqueuing a job to be performed after promise microtasks and before the\n// next macrotask. For browser environments, a macrotask is used (via\n// setImmediate or setTimeout) at a potential performance penalty.\n\n\nvar enqueuePostPromiseJob = typeof process === 'object' && typeof process.nextTick === 'function' ? function (fn) {\n  if (!resolvedPromise) {\n    resolvedPromise = Promise.resolve();\n  }\n\n  resolvedPromise.then(function () {\n    return process.nextTick(fn);\n  });\n} : setImmediate || setTimeout; // Private: cached resolved Promise instance\n\nvar resolvedPromise; // Private: Describes a batch of requests\n\n// Private: Either returns the current batch, or creates and schedules a\n// dispatch of a new batch for the given loader.\nfunction getCurrentBatch(loader) {\n  // If there is an existing batch which has not yet dispatched and is within\n  // the limit of the batch size, then return it.\n  var existingBatch = loader._batch;\n\n  if (existingBatch !== null && !existingBatch.hasDispatched && existingBatch.keys.length < loader._maxBatchSize && (!existingBatch.cacheHits || existingBatch.cacheHits.length < loader._maxBatchSize)) {\n    return existingBatch;\n  } // Otherwise, create a new batch for this loader.\n\n\n  var newBatch = {\n    hasDispatched: false,\n    keys: [],\n    callbacks: []\n  }; // Store it on the loader so it may be reused.\n\n  loader._batch = newBatch; // Then schedule a task to dispatch this batch of requests.\n\n  loader._batchScheduleFn(function () {\n    return dispatchBatch(loader, newBatch);\n  });\n\n  return newBatch;\n}\n\nfunction dispatchBatch(loader, batch) {\n  // Mark this batch as having been dispatched.\n  batch.hasDispatched = true; // If there's nothing to load, resolve any cache hits and return early.\n\n  if (batch.keys.length === 0) {\n    resolveCacheHits(batch);\n    return;\n  } // Call the provided batchLoadFn for this loader with the batch's keys and\n  // with the loader as the `this` context.\n\n\n  var batchPromise = loader._batchLoadFn(batch.keys); // Assert the expected response from batchLoadFn\n\n\n  if (!batchPromise || typeof batchPromise.then !== 'function') {\n    return failedDispatch(loader, batch, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + (\"not return a Promise: \" + String(batchPromise) + \".\")));\n  } // Await the resolution of the call to batchLoadFn.\n\n\n  batchPromise.then(function (values) {\n    // Assert the expected resolution from batchLoadFn.\n    if (!isArrayLike(values)) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + (\"not return a Promise of an Array: \" + String(values) + \".\"));\n    }\n\n    if (values.length !== batch.keys.length) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + 'not return a Promise of an Array of the same length as the Array ' + 'of keys.' + (\"\\n\\nKeys:\\n\" + String(batch.keys)) + (\"\\n\\nValues:\\n\" + String(values)));\n    } // Resolve all cache hits in the same micro-task as freshly loaded values.\n\n\n    resolveCacheHits(batch); // Step through values, resolving or rejecting each Promise in the batch.\n\n    for (var i = 0; i < batch.callbacks.length; i++) {\n      var value = values[i];\n\n      if (value instanceof Error) {\n        batch.callbacks[i].reject(value);\n      } else {\n        batch.callbacks[i].resolve(value);\n      }\n    }\n  })[\"catch\"](function (error) {\n    return failedDispatch(loader, batch, error);\n  });\n} // Private: do not cache individual loads if the entire batch dispatch fails,\n// but still reject each request so they do not hang.\n\n\nfunction failedDispatch(loader, batch, error) {\n  // Cache hits are resolved, even though the batch failed.\n  resolveCacheHits(batch);\n\n  for (var i = 0; i < batch.keys.length; i++) {\n    loader.clear(batch.keys[i]);\n    batch.callbacks[i].reject(error);\n  }\n} // Private: Resolves the Promises for any cache hits in this batch.\n\n\nfunction resolveCacheHits(batch) {\n  if (batch.cacheHits) {\n    for (var i = 0; i < batch.cacheHits.length; i++) {\n      batch.cacheHits[i]();\n    }\n  }\n} // Private: given the DataLoader's options, produce a valid max batch size.\n\n\nfunction getValidMaxBatchSize(options) {\n  var shouldBatch = !options || options.batch !== false;\n\n  if (!shouldBatch) {\n    return 1;\n  }\n\n  var maxBatchSize = options && options.maxBatchSize;\n\n  if (maxBatchSize === undefined) {\n    return Infinity;\n  }\n\n  if (typeof maxBatchSize !== 'number' || maxBatchSize < 1) {\n    throw new TypeError(\"maxBatchSize must be a positive number: \" + maxBatchSize);\n  }\n\n  return maxBatchSize;\n} // Private\n\n\nfunction getValidBatchScheduleFn(options) {\n  var batchScheduleFn = options && options.batchScheduleFn;\n\n  if (batchScheduleFn === undefined) {\n    return enqueuePostPromiseJob;\n  }\n\n  if (typeof batchScheduleFn !== 'function') {\n    throw new TypeError(\"batchScheduleFn must be a function: \" + batchScheduleFn);\n  }\n\n  return batchScheduleFn;\n} // Private: given the DataLoader's options, produce a cache key function.\n\n\nfunction getValidCacheKeyFn(options) {\n  var cacheKeyFn = options && options.cacheKeyFn;\n\n  if (cacheKeyFn === undefined) {\n    return function (key) {\n      return key;\n    };\n  }\n\n  if (typeof cacheKeyFn !== 'function') {\n    throw new TypeError(\"cacheKeyFn must be a function: \" + cacheKeyFn);\n  }\n\n  return cacheKeyFn;\n} // Private: given the DataLoader's options, produce a CacheMap to be used.\n\n\nfunction getValidCacheMap(options) {\n  var shouldCache = !options || options.cache !== false;\n\n  if (!shouldCache) {\n    return null;\n  }\n\n  var cacheMap = options && options.cacheMap;\n\n  if (cacheMap === undefined) {\n    return new Map();\n  }\n\n  if (cacheMap !== null) {\n    var cacheFunctions = ['get', 'set', 'delete', 'clear'];\n    var missingFunctions = cacheFunctions.filter(function (fnName) {\n      return cacheMap && typeof cacheMap[fnName] !== 'function';\n    });\n\n    if (missingFunctions.length !== 0) {\n      throw new TypeError('Custom cacheMap missing methods: ' + missingFunctions.join(', '));\n    }\n  }\n\n  return cacheMap;\n} // Private\n\n\nfunction isArrayLike(x) {\n  return typeof x === 'object' && x !== null && typeof x.length === 'number' && (x.length === 0 || x.length > 0 && Object.prototype.hasOwnProperty.call(x, x.length - 1));\n}\n\nmodule.exports = DataLoader;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dataloader/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/dataloader/index.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}}],"sources":{"../node_modules/dataloader/index.js":"\"use strict\";\n\n/**\n * Copyright (c) 2019-present, GraphQL Foundation\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// A Function, which when given an Array of keys, returns a Promise of an Array\n// of values or Errors.\n// Optionally turn off batching or caching or provide a cache key function or a\n// custom cache instance.\n// If a custom cache is provided, it must be of this type (a subset of ES6 Map).\n\n/**\n * A `DataLoader` creates a public API for loading data from a particular\n * data back-end with unique keys such as the `id` column of a SQL table or\n * document name in a MongoDB database, given a batch loading function.\n *\n * Each `DataLoader` instance contains a unique memoized cache. Use caution when\n * used in long-lived applications or those which serve many users with\n * different access permissions and consider creating a new instance per\n * web request.\n */\nvar DataLoader =\n/*#__PURE__*/\nfunction () {\n  function DataLoader(batchLoadFn, options) {\n    if (typeof batchLoadFn !== 'function') {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + (\"Array<key> and returns Promise<Array<value>>, but got: \" + batchLoadFn + \".\"));\n    }\n\n    this._batchLoadFn = batchLoadFn;\n    this._maxBatchSize = getValidMaxBatchSize(options);\n    this._batchScheduleFn = getValidBatchScheduleFn(options);\n    this._cacheKeyFn = getValidCacheKeyFn(options);\n    this._cacheMap = getValidCacheMap(options);\n    this._batch = null;\n  } // Private\n\n\n  var _proto = DataLoader.prototype;\n\n  /**\n   * Loads a key, returning a `Promise` for the value represented by that key.\n   */\n  _proto.load = function load(key) {\n    if (key === null || key === undefined) {\n      throw new TypeError('The loader.load() function must be called with a value,' + (\"but got: \" + String(key) + \".\"));\n    }\n\n    var batch = getCurrentBatch(this);\n    var cacheMap = this._cacheMap;\n\n    var cacheKey = this._cacheKeyFn(key); // If caching and there is a cache-hit, return cached Promise.\n\n\n    if (cacheMap) {\n      var cachedPromise = cacheMap.get(cacheKey);\n\n      if (cachedPromise) {\n        var cacheHits = batch.cacheHits || (batch.cacheHits = []);\n        return new Promise(function (resolve) {\n          cacheHits.push(function () {\n            return resolve(cachedPromise);\n          });\n        });\n      }\n    } // Otherwise, produce a new Promise for this key, and enqueue it to be\n    // dispatched along with the current batch.\n\n\n    batch.keys.push(key);\n    var promise = new Promise(function (resolve, reject) {\n      batch.callbacks.push({\n        resolve: resolve,\n        reject: reject\n      });\n    }); // If caching, cache this promise.\n\n    if (cacheMap) {\n      cacheMap.set(cacheKey, promise);\n    }\n\n    return promise;\n  }\n  /**\n   * Loads multiple keys, promising an array of values:\n   *\n   *     var [ a, b ] = await myLoader.loadMany([ 'a', 'b' ]);\n   *\n   * This is similar to the more verbose:\n   *\n   *     var [ a, b ] = await Promise.all([\n   *       myLoader.load('a'),\n   *       myLoader.load('b')\n   *     ]);\n   *\n   * However it is different in the case where any load fails. Where\n   * Promise.all() would reject, loadMany() always resolves, however each result\n   * is either a value or an Error instance.\n   *\n   *     var [ a, b, c ] = await myLoader.loadMany([ 'a', 'b', 'badkey' ]);\n   *     // c instanceof Error\n   *\n   */\n  ;\n\n  _proto.loadMany = function loadMany(keys) {\n    if (!isArrayLike(keys)) {\n      throw new TypeError('The loader.loadMany() function must be called with Array<key> ' + (\"but got: \" + keys + \".\"));\n    } // Support ArrayLike by using only minimal property access\n\n\n    var loadPromises = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      loadPromises.push(this.load(keys[i])[\"catch\"](function (error) {\n        return error;\n      }));\n    }\n\n    return Promise.all(loadPromises);\n  }\n  /**\n   * Clears the value at `key` from the cache, if it exists. Returns itself for\n   * method chaining.\n   */\n  ;\n\n  _proto.clear = function clear(key) {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      var cacheKey = this._cacheKeyFn(key);\n\n      cacheMap[\"delete\"](cacheKey);\n    }\n\n    return this;\n  }\n  /**\n   * Clears the entire cache. To be used when some event results in unknown\n   * invalidations across this particular `DataLoader`. Returns itself for\n   * method chaining.\n   */\n  ;\n\n  _proto.clearAll = function clearAll() {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      cacheMap.clear();\n    }\n\n    return this;\n  }\n  /**\n   * Adds the provided key and value to the cache. If the key already\n   * exists, no change is made. Returns itself for method chaining.\n   *\n   * To prime the cache with an error at a key, provide an Error instance.\n   */\n  ;\n\n  _proto.prime = function prime(key, value) {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      var cacheKey = this._cacheKeyFn(key); // Only add the key if it does not already exist.\n\n\n      if (cacheMap.get(cacheKey) === undefined) {\n        // Cache a rejected promise if the value is an Error, in order to match\n        // the behavior of load(key).\n        var promise;\n\n        if (value instanceof Error) {\n          promise = Promise.reject(value); // Since this is a case where an Error is intentionally being primed\n          // for a given key, we want to disable unhandled promise rejection.\n\n          promise[\"catch\"](function () {});\n        } else {\n          promise = Promise.resolve(value);\n        }\n\n        cacheMap.set(cacheKey, promise);\n      }\n    }\n\n    return this;\n  };\n\n  return DataLoader;\n}(); // Private: Enqueue a Job to be executed after all \"PromiseJobs\" Jobs.\n//\n// ES6 JavaScript uses the concepts Job and JobQueue to schedule work to occur\n// after the current execution context has completed:\n// http://www.ecma-international.org/ecma-262/6.0/#sec-jobs-and-job-queues\n//\n// Node.js uses the `process.nextTick` mechanism to implement the concept of a\n// Job, maintaining a global FIFO JobQueue for all Jobs, which is flushed after\n// the current call stack ends.\n//\n// When calling `then` on a Promise, it enqueues a Job on a specific\n// \"PromiseJobs\" JobQueue which is flushed in Node as a single Job on the\n// global JobQueue.\n//\n// DataLoader batches all loads which occur in a single frame of execution, but\n// should include in the batch all loads which occur during the flushing of the\n// \"PromiseJobs\" JobQueue after that same execution frame.\n//\n// In order to avoid the DataLoader dispatch Job occuring before \"PromiseJobs\",\n// A Promise Job is created with the sole purpose of enqueuing a global Job,\n// ensuring that it always occurs after \"PromiseJobs\" ends.\n//\n// Node.js's job queue is unique. Browsers do not have an equivalent mechanism\n// for enqueuing a job to be performed after promise microtasks and before the\n// next macrotask. For browser environments, a macrotask is used (via\n// setImmediate or setTimeout) at a potential performance penalty.\n\n\nvar enqueuePostPromiseJob = typeof process === 'object' && typeof process.nextTick === 'function' ? function (fn) {\n  if (!resolvedPromise) {\n    resolvedPromise = Promise.resolve();\n  }\n\n  resolvedPromise.then(function () {\n    return process.nextTick(fn);\n  });\n} : setImmediate || setTimeout; // Private: cached resolved Promise instance\n\nvar resolvedPromise; // Private: Describes a batch of requests\n\n// Private: Either returns the current batch, or creates and schedules a\n// dispatch of a new batch for the given loader.\nfunction getCurrentBatch(loader) {\n  // If there is an existing batch which has not yet dispatched and is within\n  // the limit of the batch size, then return it.\n  var existingBatch = loader._batch;\n\n  if (existingBatch !== null && !existingBatch.hasDispatched && existingBatch.keys.length < loader._maxBatchSize && (!existingBatch.cacheHits || existingBatch.cacheHits.length < loader._maxBatchSize)) {\n    return existingBatch;\n  } // Otherwise, create a new batch for this loader.\n\n\n  var newBatch = {\n    hasDispatched: false,\n    keys: [],\n    callbacks: []\n  }; // Store it on the loader so it may be reused.\n\n  loader._batch = newBatch; // Then schedule a task to dispatch this batch of requests.\n\n  loader._batchScheduleFn(function () {\n    return dispatchBatch(loader, newBatch);\n  });\n\n  return newBatch;\n}\n\nfunction dispatchBatch(loader, batch) {\n  // Mark this batch as having been dispatched.\n  batch.hasDispatched = true; // If there's nothing to load, resolve any cache hits and return early.\n\n  if (batch.keys.length === 0) {\n    resolveCacheHits(batch);\n    return;\n  } // Call the provided batchLoadFn for this loader with the batch's keys and\n  // with the loader as the `this` context.\n\n\n  var batchPromise = loader._batchLoadFn(batch.keys); // Assert the expected response from batchLoadFn\n\n\n  if (!batchPromise || typeof batchPromise.then !== 'function') {\n    return failedDispatch(loader, batch, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + (\"not return a Promise: \" + String(batchPromise) + \".\")));\n  } // Await the resolution of the call to batchLoadFn.\n\n\n  batchPromise.then(function (values) {\n    // Assert the expected resolution from batchLoadFn.\n    if (!isArrayLike(values)) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + (\"not return a Promise of an Array: \" + String(values) + \".\"));\n    }\n\n    if (values.length !== batch.keys.length) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + 'not return a Promise of an Array of the same length as the Array ' + 'of keys.' + (\"\\n\\nKeys:\\n\" + String(batch.keys)) + (\"\\n\\nValues:\\n\" + String(values)));\n    } // Resolve all cache hits in the same micro-task as freshly loaded values.\n\n\n    resolveCacheHits(batch); // Step through values, resolving or rejecting each Promise in the batch.\n\n    for (var i = 0; i < batch.callbacks.length; i++) {\n      var value = values[i];\n\n      if (value instanceof Error) {\n        batch.callbacks[i].reject(value);\n      } else {\n        batch.callbacks[i].resolve(value);\n      }\n    }\n  })[\"catch\"](function (error) {\n    return failedDispatch(loader, batch, error);\n  });\n} // Private: do not cache individual loads if the entire batch dispatch fails,\n// but still reject each request so they do not hang.\n\n\nfunction failedDispatch(loader, batch, error) {\n  // Cache hits are resolved, even though the batch failed.\n  resolveCacheHits(batch);\n\n  for (var i = 0; i < batch.keys.length; i++) {\n    loader.clear(batch.keys[i]);\n    batch.callbacks[i].reject(error);\n  }\n} // Private: Resolves the Promises for any cache hits in this batch.\n\n\nfunction resolveCacheHits(batch) {\n  if (batch.cacheHits) {\n    for (var i = 0; i < batch.cacheHits.length; i++) {\n      batch.cacheHits[i]();\n    }\n  }\n} // Private: given the DataLoader's options, produce a valid max batch size.\n\n\nfunction getValidMaxBatchSize(options) {\n  var shouldBatch = !options || options.batch !== false;\n\n  if (!shouldBatch) {\n    return 1;\n  }\n\n  var maxBatchSize = options && options.maxBatchSize;\n\n  if (maxBatchSize === undefined) {\n    return Infinity;\n  }\n\n  if (typeof maxBatchSize !== 'number' || maxBatchSize < 1) {\n    throw new TypeError(\"maxBatchSize must be a positive number: \" + maxBatchSize);\n  }\n\n  return maxBatchSize;\n} // Private\n\n\nfunction getValidBatchScheduleFn(options) {\n  var batchScheduleFn = options && options.batchScheduleFn;\n\n  if (batchScheduleFn === undefined) {\n    return enqueuePostPromiseJob;\n  }\n\n  if (typeof batchScheduleFn !== 'function') {\n    throw new TypeError(\"batchScheduleFn must be a function: \" + batchScheduleFn);\n  }\n\n  return batchScheduleFn;\n} // Private: given the DataLoader's options, produce a cache key function.\n\n\nfunction getValidCacheKeyFn(options) {\n  var cacheKeyFn = options && options.cacheKeyFn;\n\n  if (cacheKeyFn === undefined) {\n    return function (key) {\n      return key;\n    };\n  }\n\n  if (typeof cacheKeyFn !== 'function') {\n    throw new TypeError(\"cacheKeyFn must be a function: \" + cacheKeyFn);\n  }\n\n  return cacheKeyFn;\n} // Private: given the DataLoader's options, produce a CacheMap to be used.\n\n\nfunction getValidCacheMap(options) {\n  var shouldCache = !options || options.cache !== false;\n\n  if (!shouldCache) {\n    return null;\n  }\n\n  var cacheMap = options && options.cacheMap;\n\n  if (cacheMap === undefined) {\n    return new Map();\n  }\n\n  if (cacheMap !== null) {\n    var cacheFunctions = ['get', 'set', 'delete', 'clear'];\n    var missingFunctions = cacheFunctions.filter(function (fnName) {\n      return cacheMap && typeof cacheMap[fnName] !== 'function';\n    });\n\n    if (missingFunctions.length !== 0) {\n      throw new TypeError('Custom cacheMap missing methods: ' + missingFunctions.join(', '));\n    }\n  }\n\n  return cacheMap;\n} // Private\n\n\nfunction isArrayLike(x) {\n  return typeof x === 'object' && x !== null && typeof x.length === 'number' && (x.length === 0 || x.length > 0 && Object.prototype.hasOwnProperty.call(x, x.length - 1));\n}\n\nmodule.exports = DataLoader;"},"lineCount":418}},"error":null,"hash":"34bb0cd7f1053a3b9e8fb2e08d94d70b","cacheData":{"env":{}}}