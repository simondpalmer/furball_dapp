{"id":"../node_modules/@ceramicnetwork/common/lib/logger-provider.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\logger-provider.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612734035267},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\package.json","includedInParent":true,"mtime":1612644319656},{"name":"loglevel","loc":{"line":7,"column":43},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\logger-provider.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\loglevel\\lib\\loglevel.js"},{"name":"loglevel-plugin-prefix","loc":{"line":9,"column":57},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\logger-provider.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\loglevel-plugin-prefix\\lib\\loglevel-plugin-prefix.js"},{"name":"lodash.clonedeep","loc":{"line":10,"column":51},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\logger-provider.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\lodash.clonedeep\\index.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RootLogger = exports.LoggerProvider = void 0;\nconst loglevel_1 = __importDefault(require(\"loglevel\"));\nexports.RootLogger = loglevel_1.default;\nconst loglevel_plugin_prefix_1 = __importDefault(require(\"loglevel-plugin-prefix\"));\nconst lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nconst defaultOpts = {\n    level: 'info',\n    format: 'text',\n    stacktrace: {\n        levels: ['trace', 'warn', 'error'],\n        depth: 3,\n        excess: 0,\n    },\n};\nclass LoggerProvider {\n    static init(opts = defaultOpts) {\n        this.options = Object.assign(defaultOpts, opts);\n        if (this.options.level) {\n            loglevel_1.default.setLevel(this.options.level);\n        }\n        else {\n            loglevel_1.default.enableAll();\n        }\n        LoggerProvider._applyPrefix();\n        LoggerProvider._includeJsonPlugin();\n        return lodash_clonedeep_1.default(this.options);\n    }\n    static addPlugin(plugin, pluginState, loggerOptions, pluginOptions) {\n        plugin(loglevel_1.default, pluginState, loggerOptions, pluginOptions);\n    }\n    static _applyPrefix() {\n        loglevel_plugin_prefix_1.default.reg(loglevel_1.default);\n        loglevel_plugin_prefix_1.default.apply(loglevel_1.default, {\n            format(level, name, timestamp) {\n                return LoggerProvider._toText(timestamp, level, name);\n            },\n            timestampFormatter(date) {\n                return date.toISOString();\n            }\n        });\n    }\n    static _includeJsonPlugin() {\n        const originalFactory = loglevel_1.default.methodFactory;\n        loglevel_1.default.methodFactory = (methodName, logLevel, loggerName) => {\n            const rawMethod = originalFactory(methodName, logLevel, loggerName);\n            return (...args) => {\n                if (this.options.format !== 'json') {\n                    rawMethod(...args);\n                    return;\n                }\n                const timestamp = new Date().toISOString();\n                const hasStacktrace = !!LoggerProvider._stacktrace();\n                const needStack = hasStacktrace && this.options.stacktrace.levels.some(level => level === methodName);\n                let stacktrace = needStack ? LoggerProvider._stacktrace() : '';\n                if (stacktrace) {\n                    const lines = stacktrace.split('\\n');\n                    lines.splice(0, this.options.stacktrace.excess + 3);\n                    const { depth } = this.options.stacktrace;\n                    if (depth && lines.length !== depth + 1) {\n                        const shrink = lines.splice(0, depth);\n                        stacktrace = shrink.join('\\n');\n                        if (lines.length) {\n                            stacktrace += `\\n    and ${lines.length} more`;\n                        }\n                    }\n                    else {\n                        stacktrace = lines.join('\\n');\n                    }\n                }\n                rawMethod(JSON.stringify({\n                    message: LoggerProvider._interpolate(args),\n                    level: {\n                        label: methodName, value: logLevel,\n                    },\n                    logger: loggerName || '',\n                    timestamp,\n                    stacktrace,\n                    component: this.options.component || undefined\n                }));\n            };\n        };\n        loglevel_1.default.setLevel(loglevel_1.default.getLevel());\n    }\n    static _toText(timestamp, level, name) {\n        if (this.options.format === 'json') {\n            return \"\";\n        }\n        return `[${timestamp}] ${level} ${this.options.component ? this.options.component : \"\"} ${name}:`;\n    }\n    static _stacktrace() {\n        try {\n            throw new Error();\n        }\n        catch (trace) {\n            return trace.stack;\n        }\n    }\n    static _interpolate(array) {\n        let result = '';\n        let index = 0;\n        if (array.length > 1 && typeof array[0] === 'string') {\n            result = array[0].replace(/(%?)(%([sdjo]))/g, (match, escaped, ptn, flag) => {\n                if (!escaped) {\n                    index += 1;\n                    const arg = array[index];\n                    let a = '';\n                    switch (flag) {\n                        case 's':\n                            a += arg;\n                            break;\n                        case 'd':\n                            a += +arg;\n                            break;\n                        case 'j':\n                            a = LoggerProvider._safeStringify(arg);\n                            break;\n                        case 'o': {\n                            let obj = LoggerProvider._safeStringify(arg);\n                            if (obj[0] !== '{' && obj[0] !== '[') {\n                                obj = `<${obj}>`;\n                            }\n                            a = LoggerProvider._constructorName(arg) + obj;\n                            break;\n                        }\n                    }\n                    return a;\n                }\n                return match;\n            });\n            result = result.replace(/%{2,2}/g, '%');\n            index += 1;\n        }\n        if (array.length > index) {\n            if (result)\n                result += ' ';\n            result += array.slice(index).join(' ');\n        }\n        return result;\n    }\n    static _constructorName(obj) {\n        if (!Object.getOwnPropertyDescriptor || !Object.getPrototypeOf) {\n            return Object.prototype.toString.call(obj).slice(8, -1);\n        }\n        while (obj) {\n            const descriptor = Object.getOwnPropertyDescriptor(obj, 'constructor');\n            if (descriptor !== undefined && typeof descriptor.value === 'function' && descriptor.value.name !== '') {\n                return descriptor.value.name;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return '';\n    }\n    static _safeStringify(obj, indent = 0) {\n        let cache = [];\n        const retVal = JSON.stringify(obj, (key, value) => typeof value === \"object\" && value !== null\n            ? cache.includes(value)\n                ? undefined\n                : cache.push(value) && value\n            : value, indent);\n        cache = null;\n        return retVal;\n    }\n}\nexports.LoggerProvider = LoggerProvider;\n"},"sourceMaps":{"js":{"version":3,"file":"logger-provider.js","sourceRoot":"","sources":["../src/logger-provider.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"614b95d328feb8ae1421e7c718577b37","cacheData":{"env":{}}}