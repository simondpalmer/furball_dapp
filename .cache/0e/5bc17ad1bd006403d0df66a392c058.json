{"id":"../node_modules/pull-defer/duplex.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1610925343440},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\pull-defer\\package.json","includedInParent":true,"mtime":1610739187877},{"name":"./source","loc":{"line":2,"column":21},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\pull-defer\\duplex.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\pull-defer\\source.js"},{"name":"./sink","loc":{"line":3,"column":19},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\pull-defer\\duplex.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\pull-defer\\sink.js"}],"generated":{"js":"\nvar Source = require('./source')\nvar Sink = require('./sink')\n\nmodule.exports = function () {\n\n  var source = Source()\n  var sink = Sink()\n\n  return {\n    source: source,\n    sink: sink,\n    resolve: function (duplex) {\n      source.resolve(duplex.source)\n      sink.resolve(duplex.sink)\n\n    }\n  }\n\n\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/pull-defer/duplex.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pull-defer/duplex.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}}],"sources":{"../node_modules/pull-defer/duplex.js":"\nvar Source = require('./source')\nvar Sink = require('./sink')\n\nmodule.exports = function () {\n\n  var source = Source()\n  var sink = Sink()\n\n  return {\n    source: source,\n    sink: sink,\n    resolve: function (duplex) {\n      source.resolve(duplex.source)\n      sink.resolve(duplex.sink)\n\n    }\n  }\n\n\n}\n"},"lineCount":22}},"error":null,"hash":"e6d29b6434a636c57ab62236ef9f1d95","cacheData":{"env":{}}}