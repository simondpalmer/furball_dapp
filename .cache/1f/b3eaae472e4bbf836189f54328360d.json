{"id":"../node_modules/ndjson/index.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1610925343440},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\ndjson\\package.json","includedInParent":true,"mtime":1610739187838},{"name":"through2","loc":{"line":1,"column":22},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\ndjson\\index.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\through2\\through2.js"},{"name":"split2","loc":{"line":2,"column":20},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\ndjson\\index.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\split2\\index.js"},{"name":"os","loc":{"line":3,"column":18},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\ndjson\\index.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\os-browserify\\browser.js"},{"name":"json-stringify-safe","loc":{"line":4,"column":24},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\ndjson\\index.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\json-stringify-safe\\stringify.js"}],"generated":{"js":"var through = require('through2')\nvar split = require('split2')\nvar EOL = require('os').EOL\nvar stringify = require('json-stringify-safe')\n\nmodule.exports = parse\nmodule.exports.serialize = module.exports.stringify = serialize\nmodule.exports.parse = parse\n\nfunction parse (opts) {\n  opts = opts || {}\n  opts.strict = opts.strict !== false\n\n  function parseRow (row) {\n    try {\n      if (row) return JSON.parse(row)\n    } catch (e) {\n      if (opts.strict) {\n        this.emit('error', new Error('Could not parse row ' + row.slice(0, 50) + '...'))\n      }\n    }\n  }\n\n  return split(parseRow, opts)\n}\n\nfunction serialize (opts) {\n  return through.obj(opts, function(obj, enc, cb) {\n    cb(null, stringify(obj) + EOL)\n  })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ndjson/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ndjson/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"../node_modules/ndjson/index.js":"var through = require('through2')\nvar split = require('split2')\nvar EOL = require('os').EOL\nvar stringify = require('json-stringify-safe')\n\nmodule.exports = parse\nmodule.exports.serialize = module.exports.stringify = serialize\nmodule.exports.parse = parse\n\nfunction parse (opts) {\n  opts = opts || {}\n  opts.strict = opts.strict !== false\n\n  function parseRow (row) {\n    try {\n      if (row) return JSON.parse(row)\n    } catch (e) {\n      if (opts.strict) {\n        this.emit('error', new Error('Could not parse row ' + row.slice(0, 50) + '...'))\n      }\n    }\n  }\n\n  return split(parseRow, opts)\n}\n\nfunction serialize (opts) {\n  return through.obj(opts, function(obj, enc, cb) {\n    cb(null, stringify(obj) + EOL)\n  })\n}\n"},"lineCount":32}},"error":null,"hash":"23759708bf568d4dd714ac426f889b7f","cacheData":{"env":{}}}