{"id":"../node_modules/@ceramicnetwork/common/lib/doctype.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\doctype.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612734035267},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\package.json","includedInParent":true,"mtime":1612644319656},{"name":"lodash.clonedeep","loc":{"line":7,"column":51},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\doctype.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\lodash.clonedeep\\index.js"},{"name":"events","loc":{"line":8,"column":25},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\doctype.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\events\\events.js"},{"name":"@ceramicnetwork/docid","loc":{"line":9,"column":40},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\doctype.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\docid\\lib\\index.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DoctypeStatic = exports.Doctype = exports.CommitType = exports.AnchorStatus = exports.SignatureStatus = void 0;\nconst lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nconst events_1 = require(\"events\");\nconst docid_1 = __importDefault(require(\"@ceramicnetwork/docid\"));\nvar SignatureStatus;\n(function (SignatureStatus) {\n    SignatureStatus[SignatureStatus[\"GENESIS\"] = 0] = \"GENESIS\";\n    SignatureStatus[SignatureStatus[\"PARTIAL\"] = 1] = \"PARTIAL\";\n    SignatureStatus[SignatureStatus[\"SIGNED\"] = 2] = \"SIGNED\";\n})(SignatureStatus = exports.SignatureStatus || (exports.SignatureStatus = {}));\nvar AnchorStatus;\n(function (AnchorStatus) {\n    AnchorStatus[AnchorStatus[\"NOT_REQUESTED\"] = 0] = \"NOT_REQUESTED\";\n    AnchorStatus[AnchorStatus[\"PENDING\"] = 1] = \"PENDING\";\n    AnchorStatus[AnchorStatus[\"PROCESSING\"] = 2] = \"PROCESSING\";\n    AnchorStatus[AnchorStatus[\"ANCHORED\"] = 3] = \"ANCHORED\";\n    AnchorStatus[AnchorStatus[\"FAILED\"] = 4] = \"FAILED\";\n})(AnchorStatus = exports.AnchorStatus || (exports.AnchorStatus = {}));\nvar CommitType;\n(function (CommitType) {\n    CommitType[CommitType[\"GENESIS\"] = 0] = \"GENESIS\";\n    CommitType[CommitType[\"SIGNED\"] = 1] = \"SIGNED\";\n    CommitType[CommitType[\"ANCHOR\"] = 2] = \"ANCHOR\";\n})(CommitType = exports.CommitType || (exports.CommitType = {}));\nclass Doctype extends events_1.EventEmitter {\n    constructor(_state, _context) {\n        super();\n        this._state = _state;\n        this._context = _context;\n    }\n    get id() {\n        return new docid_1.default(this._state.doctype, this._state.log[0].cid);\n    }\n    get doctype() {\n        return this._state.doctype;\n    }\n    get content() {\n        var _a;\n        const { next, content } = this._state;\n        return lodash_clonedeep_1.default((_a = next === null || next === void 0 ? void 0 : next.content) !== null && _a !== void 0 ? _a : content);\n    }\n    get metadata() {\n        var _a;\n        const { next, metadata } = this._state;\n        return lodash_clonedeep_1.default((_a = next === null || next === void 0 ? void 0 : next.metadata) !== null && _a !== void 0 ? _a : metadata);\n    }\n    get controllers() {\n        return this.metadata.controllers;\n    }\n    get tip() {\n        return this._state.log[this._state.log.length - 1].cid;\n    }\n    get commitId() {\n        return docid_1.default.fromOther(this.id, this.tip);\n    }\n    get allCommitIds() {\n        return this._state.log.map(({ cid }) => docid_1.default.fromOther(this.id, cid));\n    }\n    get anchorCommitIds() {\n        return this._state.log\n            .filter(({ type }) => type === CommitType.ANCHOR)\n            .map(({ cid }) => docid_1.default.fromOther(this.id, cid));\n    }\n    get state() {\n        return lodash_clonedeep_1.default(this._state);\n    }\n    set state(state) {\n        this._state = state;\n    }\n    set context(context) {\n        this._context = context;\n    }\n    get context() {\n        return this._context;\n    }\n}\nexports.Doctype = Doctype;\nfunction DoctypeStatic() {\n    return (constructor) => { constructor; };\n}\nexports.DoctypeStatic = DoctypeStatic;\n"},"sourceMaps":{"js":{"version":3,"file":"doctype.js","sourceRoot":"","sources":["../src/doctype.ts"],"names":[],"mappings":";;;;;;AACA,wEAAwC;AACxC,mCAAqC;AAErC,kEAAyC;AAMzC,IAAY,eAEX;AAFD,WAAY,eAAe;IACvB,2DAAO,CAAA;IAAE,2DAAO,CAAA;IAAE,yDAAM,CAAA;AAC5B,CAAC,EAFW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAE1B;AAKD,IAAY,YAEX;AAFD,WAAY,YAAY;IACpB,iEAAa,CAAA;IAAE,qDAAO,CAAA;IAAE,2DAAU,CAAA;IAAE,uDAAQ,CAAA;IAAE,mDAAM,CAAA;AACxD,CAAC,EAFW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAEvB;AA8ED,IAAY,UAEX;AAFD,WAAY,UAAU;IACpB,iDAAO,CAAA;IAAE,+CAAM,CAAA;IAAE,+CAAM,CAAA;AACzB,CAAC,EAFW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAErB;AAkDD,MAAsB,OAAQ,SAAQ,qBAAY;IAC9C,YAAoB,MAAgB,EAAU,QAAiB;QAC3D,KAAK,EAAE,CAAA;QADS,WAAM,GAAN,MAAM,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAS;IAE/D,CAAC;IAED,IAAI,EAAE;QACF,OAAO,IAAI,eAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACjE,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAA;IAC9B,CAAC;IAED,IAAI,OAAO;;QACP,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAA;QACrC,OAAO,0BAAS,OAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,mCAAI,OAAO,CAAC,CAAA;IAC9C,CAAC;IAED,IAAI,QAAQ;;QACR,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,MAAM,CAAA;QACtC,OAAO,0BAAS,OAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,mCAAI,QAAQ,CAAC,CAAA;IAChD,CAAC;IAED,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAA;IACpC,CAAC;IAED,IAAI,GAAG;QACH,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAA;IAC1D,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,eAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;IAC7C,CAAC;IAKD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,eAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAA;IACxE,CAAC;IAKD,IAAI,eAAe;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG;aACjB,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,KAAK,UAAU,CAAC,MAAM,CAAC;aAChD,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,eAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAA;IACxD,CAAC;IAED,IAAI,KAAK;QACL,OAAO,0BAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACjC,CAAC;IAED,IAAI,KAAK,CAAC,KAAe;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;IACvB,CAAC;IAED,IAAI,OAAO,CAAC,OAAgB;QACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;IAC3B,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAA;IACxB,CAAC;CASJ;AA1ED,0BA0EC;AAMD,SAAgB,aAAa;IACzB,OAAO,CAAc,WAAc,EAAO,EAAE,GAAG,WAAW,CAAA,CAAC,CAAC,CAAA;AAChE,CAAC;AAFD,sCAEC","sourcesContent":[null]}},"error":null,"hash":"0cfe81dd6c599eceb66f325381dc6ab5","cacheData":{"env":{}}}