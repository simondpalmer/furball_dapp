{"id":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612734035267},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dag-jose-utils\\node_modules\\multicodec\\package.json","includedInParent":true,"mtime":1612644319702},{"name":"varint","loc":{"line":3,"column":23},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dag-jose-utils\\node_modules\\multicodec\\src\\util.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dag-jose-utils\\node_modules\\varint\\index.js"},{"name":"uint8arrays/to-string","loc":{"line":4,"column":35},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dag-jose-utils\\node_modules\\multicodec\\src\\util.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dag-jose-utils\\node_modules\\uint8arrays\\to-string.js"},{"name":"uint8arrays/from-string","loc":{"line":5,"column":37},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dag-jose-utils\\node_modules\\multicodec\\src\\util.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\dag-jose-utils\\node_modules\\uint8arrays\\from-string.js"}],"generated":{"js":"'use strict'\n\nconst varint = require('varint')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nmodule.exports = {\n  numberToUint8Array,\n  uint8ArrayToNumber,\n  varintUint8ArrayEncode,\n  varintEncode\n}\n\nfunction uint8ArrayToNumber (buf) {\n  return parseInt(uint8ArrayToString(buf, 'base16'), 16)\n}\n\nfunction numberToUint8Array (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return uint8ArrayFromString(hexString, 'base16')\n}\n\nfunction varintUint8ArrayEncode (input) {\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)))\n}\n\nfunction varintEncode (num) {\n  return Uint8Array.from(varint.encode(num))\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../node_modules/dag-jose-utils/node_modules/multicodec/src/util.js":"'use strict'\n\nconst varint = require('varint')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nmodule.exports = {\n  numberToUint8Array,\n  uint8ArrayToNumber,\n  varintUint8ArrayEncode,\n  varintEncode\n}\n\nfunction uint8ArrayToNumber (buf) {\n  return parseInt(uint8ArrayToString(buf, 'base16'), 16)\n}\n\nfunction numberToUint8Array (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return uint8ArrayFromString(hexString, 'base16')\n}\n\nfunction varintUint8ArrayEncode (input) {\n  return Uint8Array.from(varint.encode(uint8ArrayToNumber(input)))\n}\n\nfunction varintEncode (num) {\n  return Uint8Array.from(varint.encode(num))\n}\n"},"lineCount":33}},"error":null,"hash":"c5ffbba0b8e0e0e74459f4109405c158","cacheData":{"env":{}}}