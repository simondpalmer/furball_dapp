{"id":"../node_modules/uint8arrays/xor.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612734035267},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\uint8arrays\\package.json","includedInParent":true,"mtime":1612644319657}],"generated":{"js":"'use strict'\n\n/**\n * Returns the xor distance between two arrays\n *\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n */\nfunction xor (a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length')\n  }\n\n  const result = new Uint8Array(a.length)\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i]\n  }\n\n  return result\n}\n\nmodule.exports = xor\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/uint8arrays/xor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/uint8arrays/xor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}}],"sources":{"../node_modules/uint8arrays/xor.js":"'use strict'\n\n/**\n * Returns the xor distance between two arrays\n *\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n */\nfunction xor (a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length')\n  }\n\n  const result = new Uint8Array(a.length)\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i]\n  }\n\n  return result\n}\n\nmodule.exports = xor\n"},"lineCount":24}},"error":null,"hash":"87d04b9617cbddee2fec0d058e508626","cacheData":{"env":{}}}