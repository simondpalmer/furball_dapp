{"id":"../node_modules/@ceramicnetwork/doctype-caip10-link/lib/caip10-link-doctype.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\doctype-caip10-link\\lib\\caip10-link-doctype.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612734035267},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\doctype-caip10-link\\package.json","includedInParent":true,"mtime":1612644319656},{"name":"@ceramicnetwork/common","loc":{"line":11,"column":25},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\doctype-caip10-link\\lib\\caip10-link-doctype.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\index.js"}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar Caip10LinkDoctype_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Caip10LinkDoctype = exports.DOCTYPE_NAME = void 0;\nconst common_1 = require(\"@ceramicnetwork/common\");\nexports.DOCTYPE_NAME = 'caip10-link';\nlet Caip10LinkDoctype = Caip10LinkDoctype_1 = class Caip10LinkDoctype extends common_1.Doctype {\n    async change(params, opts) {\n        const { content, metadata } = params;\n        const updateCommit = await Caip10LinkDoctype_1._makeCommit(this, content, metadata === null || metadata === void 0 ? void 0 : metadata.schema);\n        const updated = await this.context.api.applyCommit(this.id.toString(), updateCommit, opts);\n        this.state = updated.state;\n    }\n    static async create(params, context, opts) {\n        const { content, metadata } = params;\n        const commit = await Caip10LinkDoctype_1.makeGenesis({ content, metadata }, context);\n        return context.api.createDocumentFromGenesis(exports.DOCTYPE_NAME, commit, opts);\n    }\n    static async makeGenesis(params, context) {\n        const { content, metadata } = params;\n        if (content) {\n            throw new Error('Account link genesis cannot have content');\n        }\n        if (!metadata) {\n            throw new Error('Metadata must be specified');\n        }\n        if (!(metadata.controllers && metadata.controllers.length === 1)) {\n            throw new Error('Exactly one controller must be specified');\n        }\n        const [address, linkedChainId] = metadata.controllers[0].split('@');\n        if (!linkedChainId) {\n            throw new Error('Chain ID must be specified according to CAIP-10');\n        }\n        return { header: { controllers: metadata.controllers, family: `caip10-${linkedChainId}` } };\n    }\n    static async _makeCommit(doctype, newContent, newSchema = null) {\n        if (newSchema) {\n            throw new Error('Schema not allowed on caip10-link doctype');\n        }\n        if (newContent == null) {\n            throw new Error('Proof must be given in doctype');\n        }\n        return { data: newContent, prev: doctype.tip, id: doctype.state.log[0].cid };\n    }\n};\nCaip10LinkDoctype = Caip10LinkDoctype_1 = __decorate([\n    common_1.DoctypeStatic()\n], Caip10LinkDoctype);\nexports.Caip10LinkDoctype = Caip10LinkDoctype;\n"},"sourceMaps":{"js":{"version":3,"file":"caip10-link-doctype.js","sourceRoot":"","sources":["../src/caip10-link-doctype.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,mDAQ+B;AAElB,QAAA,YAAY,GAAG,aAAa,CAAA;AAazC,IAAa,iBAAiB,yBAA9B,MAAa,iBAAkB,SAAQ,gBAAO;IAO1C,KAAK,CAAC,MAAM,CAAC,MAAwB,EAAE,IAAc;QACjD,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAA;QAEpC,MAAM,YAAY,GAAG,MAAM,mBAAiB,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,CAAC,CAAA;QACzF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,CAAA;QAC1F,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA;IAC9B,CAAC;IAQD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAwB,EAAE,OAAgB,EAAE,IAAc;QAC1E,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAA;QAEpC,MAAM,MAAM,GAAG,MAAM,mBAAiB,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAA;QAClF,OAAO,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,oBAAY,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;IAC5E,CAAC;IAOD,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,MAA2B,EAAE,OAAgB;QAClE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,MAAM,CAAA;QAEpC,IAAI,OAAO,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAA;SAC9D;QACD,IAAI,CAAC,QAAQ,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAA;SAChD;QACD,IAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;YAC9D,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAA;SAC9D;QAED,MAAM,CAAC,OAAO,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACnE,IAAI,CAAC,aAAa,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAA;SACrE;QAED,OAAO,EAAE,MAAM,EAAE,EAAE,WAAW,EAAE,QAAQ,CAAC,WAAW,EAAE,MAAM,EAAE,UAAU,aAAa,EAAE,EAAE,EAAE,CAAA;IAC/F,CAAC;IASD,MAAM,CAAC,KAAK,CAAC,WAAW,CAAE,OAA0B,EAAE,UAAe,EAAE,YAAoB,IAAI;QAC3F,IAAI,SAAS,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAA;SAC/D;QACD,IAAI,UAAU,IAAI,IAAI,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAA;SACpD;QACD,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA;IAChF,CAAC;CACJ,CAAA;AAtEY,iBAAiB;IAD7B,sBAAa,EAAyC;GAC1C,iBAAiB,CAsE7B;AAtEY,8CAAiB","sourcesContent":[null]}},"error":null,"hash":"b09fb9427170b6a7ad5edbf167200125","cacheData":{"env":{}}}