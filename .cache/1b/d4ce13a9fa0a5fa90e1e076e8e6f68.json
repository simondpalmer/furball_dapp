{"id":"../node_modules/@ceramicnetwork/common/lib/doc-cache.js","dependencies":[{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\doc-cache.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\package.json","includedInParent":true,"mtime":1612734035267},{"name":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\package.json","includedInParent":true,"mtime":1612644319656},{"name":"lru_map","loc":{"line":4,"column":26},"parent":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\@ceramicnetwork\\common\\lib\\doc-cache.js","resolved":"C:\\Users\\Simon Palmer\\Documents\\Programming\\ETHDenver 2021\\furball-dapp\\node_modules\\lru_map\\dist\\lru.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocCache = void 0;\nconst lru_map_1 = require(\"lru_map\");\nclass DocCache {\n    constructor(limit, cacheCommits = true) {\n        this._cacheCommits = cacheCommits;\n        this._baseDocCache = new lru_map_1.LRUMap(limit);\n        this._pinnedDocCache = {};\n        this._commitDocCache = this._cacheCommits ? new lru_map_1.LRUMap(limit) : null;\n    }\n    put(doc) {\n        if (doc.id.commit == null) {\n            this._baseDocCache.set(doc.id.baseID.toString(), doc);\n            return;\n        }\n        if (this._cacheCommits) {\n            this._commitDocCache.set(doc.id.toString(), doc);\n        }\n    }\n    get(docId) {\n        let doc = this._pinnedDocCache[docId.toString()];\n        if (doc) {\n            return doc;\n        }\n        doc = this._baseDocCache.get(docId.toString());\n        if (doc) {\n            return doc;\n        }\n        return this._cacheCommits ? this._commitDocCache.get(docId.toString()) : null;\n    }\n    pin(doc) {\n        if (doc.id.commit != null) {\n            throw new Error(`Cannot pin a specific commit. Doc ID ${doc.id.toString()}`);\n        }\n        this._pinnedDocCache[doc.id.toString()] = doc;\n        this._baseDocCache.delete(doc.id.toString());\n    }\n    unpin(docId) {\n        const doc = this._pinnedDocCache[docId.baseID.toString()];\n        delete this._pinnedDocCache[docId.baseID.toString()];\n        if (doc) {\n            this.put(doc);\n        }\n        return;\n    }\n    del(docId) {\n        this._baseDocCache.delete(docId.baseID.toString());\n        if (this._cacheCommits) {\n            this._commitDocCache.delete(docId.toString());\n        }\n    }\n    has(docId) {\n        return this.get(docId) != null;\n    }\n    applyToAll(applyFn) {\n        this._baseDocCache.forEach((d) => applyFn(d));\n        if (this._cacheCommits) {\n            this._commitDocCache.forEach((d) => applyFn(d));\n        }\n        Object.entries(this._pinnedDocCache).forEach(([, d]) => applyFn(d));\n    }\n    clear() {\n        this._pinnedDocCache = {};\n        this._baseDocCache.clear();\n        if (this._cacheCommits) {\n            this._commitDocCache.clear();\n        }\n    }\n}\nexports.DocCache = DocCache;\n"},"sourceMaps":{"js":{"version":3,"file":"doc-cache.js","sourceRoot":"","sources":["../src/doc-cache.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"17f729c057e077a9e6751b866772100a","cacheData":{"env":{}}}